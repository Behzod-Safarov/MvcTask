@model TaskMvc.Models.Employee

<div class="modal fade" id="editModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Employee</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("UpdateEmployee", "Home", FormMethod.Post, new { id = "editForm" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.PayrollNumber)

                    <div class="form-group">
                        @Html.LabelFor(m => m.Forenames)
                        @Html.TextBoxFor(m => m.Forenames, new { @class = "form-control", required = "required" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Surname)
                        @Html.TextBoxFor(m => m.Surname, new { @class = "form-control", required = "required" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.DateOfBirth)
                        <input type="date" name="DateOfBirth" class="form-control" 
                               value="@(Model.DateOfBirth.HasValue ? Model.DateOfBirth.Value.ToString("yyyy-MM-dd") : "")" 
                               required />
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Telephone)
                        @Html.TextBoxFor(m => m.Telephone, new { @class = "form-control" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Mobile)
                        @Html.TextBoxFor(m => m.Mobile, new { @class = "form-control" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Address)
                        @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Address2)
                        @Html.TextBoxFor(m => m.Address2, new { @class = "form-control" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Postcode)
                        @Html.TextBoxFor(m => m.Postcode, new { @class = "form-control" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.EmailHome)
                        @Html.TextBoxFor(m => m.EmailHome, new { @class = "form-control", type = "email" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.StartDate)
                        <input type="date" name="StartDate" class="form-control" 
                               value="@(Model.StartDate.HasValue ? Model.StartDate.Value.ToString("yyyy-MM-dd") : "")" 
                               required />
                    </div>

                    <button type="submit" class="btn btn-primary">Save Changes</button>
                }
            </div>
        </div>
    </div>
</div>
